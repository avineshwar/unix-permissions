[
  {
    "command": "convert.number <permission>",
    "describe": "Returns permission converted to a decimal number.",
    "examples": [["convert.number 422", "Output: 274"]]
  },
  {
    "command": "convert.octal <permission>",
    "describe": "Returns permission converted to an octal number.",
    "examples": [["convert.octal u+r,go+w", "Output: 0422"]]
  },
  {
    "command": "convert.symbolic <permission>",
    "describe": "Returns permission converted to a symbolic type similar to chmod input.",
    "examples": [["convert.symbolic 422", "Output: u+r,go+w"]]
  },
  {
    "command": "convert.stat <permission>",
    "describe": "Returns permission converted to a type similar to stat output.",
    "examples": [["convert.stat 422", "Output: r---w--w-"]]
  },
  {
    "command": "convert.object <permission>",
    "describe": "Returns permission converted to an object.",
    "examples": [
      [
        "convert.object 422",
        "Output: {\"user\":{\"read\":true},\"group\":{\"write\":true},\"others\":{\"write\":true}}"
      ]
    ]
  },
  {
    "command": "type <permission>",
    "describe": "Returns the permission type or 'invalid'.",
    "examples": [["type 422", "Output: octal"]]
  },
  {
    "command": "set <permission> [permissions...]",
    "describe": "Returns the result of setting `permissions` on `permission`.",
    "examples": [["set a=w a+r", "Output: a=rw"]]
  },
  {
    "command": "unset <permission> [permissions...]",
    "describe": "Returns the result of unsetting `permissions` on `permission`.",
    "examples": [["unset a=wr a+r", "Output: a=w"]]
  },
  {
    "command": "contains <permission> <permissions...>",
    "describe": "Tests whether `permission` includes `permissions`. Returns `true` or `false` or (on the CLI) use the exit code `0` or `1`.",
    "examples": [["contains 744 005", "Exit code: 1"]]
  },
  {
    "command": "equal <permission> <permissions...>",
    "describe": "Tests whether `permission` equals exactly `permissions`. Returns `true` or `false` or (on the CLI) use the exit code `0` or `1`",
    "examples": [["equal o+xr o+r,o+x", "Exit code: 0"]]
  },
  {
    "command": "normalize <permission>",
    "describe": "Normalize a permission to its canonical shape. Use an exit code `1` if permission is invalid.",
    "examples": [
      ["normalize u+w,o+w", "Output: uo+w"],
      ["normalize z+w", "Exit code: 1"]
    ]
  },
  {
    "command": "full <permission>",
    "describe": "Converts all the omitted permissions to negative permissions",
    "examples": [["full a+rw", "Output: a=rw"]]
  },
  {
    "command": "partial <permission>",
    "describe": "Remove all the negative permissions.",
    "examples": [["partial a=rw", "Output: a+rw"]]
  },
  {
    "command": "invert <permission>",
    "describe": "Inverts permission and unsets the special permissions",
    "examples": [["invert 744", "Output: =0033"]]
  },
  {
    "command": "flip <permission>",
    "describe": "Inverts permission including the special permissions",
    "examples": [["flip 744", "Output: =7033"]]
  },
  {
    "command": "min <permission> [permissions...]",
    "describe": "Retrieve the lowest permissions among all arguments. This does not return the lowest argument. Instead it returns a combination of the lowest bits of all arguments.",
    "examples": [["min 744 005", "Output: 0004"]]
  },
  {
    "command": "max <permission> [permissions...]",
    "describe": "Retrieve the highest permissions among all arguments. This does not return the highest argument. Instead it returns a combination of the highest bits of all arguments.",
    "examples": [["max 744 005", "Output: 0745"]]
  },
  {
    "command": "select.user <permission>",
    "describe": "Returns the part within permission specific to user",
    "examples": [["select.user u=w,g=x,o=r", "Output: =w"]]
  },
  {
    "command": "select.group <permission>",
    "describe": "Returns the part within permission specific to group",
    "examples": [["select.group u=w,g=x,o=r", "Output: =x"]]
  },
  {
    "command": "select.others <permission>",
    "describe": "Returns the part within permission specific to others",
    "examples": [["select.others u=w,g=x,o=r", "Output: =r"]]
  },
  {
    "command": "deselect.user <permission>",
    "describe": "Inverse of select.user",
    "examples": [["deselect.user =w", "Output: u=w"]]
  },
  {
    "command": "deselect.group <permission>",
    "describe": "Inverse of select.group",
    "examples": [["deselect.group =x", "Output: g=x"]]
  },
  {
    "command": "deselect.others <permission>",
    "describe": "Inverse of select.others",
    "examples": [["deselect.others =r", "Output: o=r"]]
  }
]
