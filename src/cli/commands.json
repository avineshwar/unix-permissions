[
  {
    "command": "convert.number <permission>",
    "describe": "Convert permission to a decimal number.",
    "examples": [["number 422", "Output: 274"]]
  },
  {
    "command": "convert.octal <permission>",
    "describe": "Convert permission to an octal number.",
    "examples": [["octal u+r,go+w", "Output: 0422"]]
  },
  {
    "command": "convert.symbolic <permission>",
    "describe": "Convert permission to a symbolic type similar to chmod input.",
    "examples": [["symbolic 422", "Output: u+r,go+w"]]
  },
  {
    "command": "convert.stat <permission>",
    "describe": "Convert permission to a type similar to stat output.",
    "examples": [["stat 422", "Output: r---w--w-"]]
  },
  {
    "command": "convert.object <permission>",
    "describe": "Convert permission to an object.",
    "examples": [["object 422", "Output: r---w--w-"]]
  },
  {
    "command": "type <permission>",
    "describe": "Get the permission type.",
    "examples": [["type 422", "Output: octal"]]
  },
  {
    "command": "set permission <permissions...>",
    "describe": "Set permissions.",
    "examples": [["set a=w a+r", "Output: a=rw"]]
  },
  {
    "command": "unset permission <permissions...>",
    "describe": "Unset permissions.",
    "examples": [["unset a=wr a+r", "Output: a=w"]]
  },
  {
    "command": "contains permission <permissions...>",
    "describe": "Tests whether permission matches other permissions.",
    "examples": [["contains 744 005", "Exit code: 1"]]
  },
  {
    "command": "normalize <permission>",
    "describe": "Normalize and validate a permission.",
    "examples": [
      ["normalize u+w,o+w", "Output: uo+w"],
      ["normalize z+w", "Exit code: 1"]
    ]
  },
  {
    "command": "full <permission>",
    "describe": "Transform a partial permission into a full one.",
    "examples": [["full a+rw", "Output: a=rw"]]
  },
  {
    "command": "partial <permission>",
    "describe": "Transform a full permission into a partial one.",
    "examples": [["partial a=rw", "Output: a+rw"]]
  },
  {
    "command": "invert <permission>",
    "describe": "Invert the permission, except the special flags",
    "examples": [["invert 744", "Output: =0033"]]
  },
  {
    "command": "flip <permission>",
    "describe": "Invert the permission, including the special flags",
    "examples": [["flip 744", "Output: =7033"]]
  },
  {
    "command": "min permission [permissions...]",
    "describe": "Returns the smallest permissions",
    "examples": [["min 744 005", "Output: 0004"]]
  },
  {
    "command": "max permission [permissions...]",
    "describe": "Returns the highest permissions",
    "examples": [["max 744 005", "Output: 0745"]]
  },
  {
    "command": "select.user <permission>",
    "describe": "Returns the permission's user class",
    "examples": [["select.user u=w,g=x,o=r", "Output: =w"]]
  },
  {
    "command": "select.group <permission>",
    "describe": "Returns the permission's group class",
    "examples": [["select.user u=w,g=x,o=r", "Output: =x"]]
  },
  {
    "command": "select.others <permission>",
    "describe": "Returns the permission's others class",
    "examples": [["select.user u=w,g=x,o=r", "Output: =r"]]
  },
  {
    "command": "deselect.user <permission>",
    "describe": "Get a permission with only a user class",
    "examples": [["deselect.user =w", "Output: u=w"]]
  },
  {
    "command": "deselect.group <permission>",
    "describe": "Get a permission with only a group class",
    "examples": [["deselect.group =x", "Output: g=x"]]
  },
  {
    "command": "deselect.others <permission>",
    "describe": "Get a permission with only a others class",
    "examples": [["deselect.others =r", "Output: o=r"]]
  }
]
